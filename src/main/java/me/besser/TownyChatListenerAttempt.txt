Currently we do the naive thing, and just scan the chat event to see if there is the general tag in it.
This is bad, and probably prone to breaking. Ideally, we would use Towny's TownyChat API, except that doesnt exist.

I tried everything to get this working. I have no idea how plugins like the Dynmap or DiscordSRV only get Towny
chat data from the general channel, because when I try their implementations it doesnt work. Maybe someone smarter than me
could get this to work, but for now, we wil stick with the janky work around.

Below are some of my attempts.



//        Chat townyChat = (Chat) Bukkit.getPluginManager().getPlugin("TownyChat");
//
//        if (townyChat == null) {
//            log(WARNING, "Could not automatically hook TownyChat channels");
//        }
//
//        Collection<Channel> channels = townyChat.getChannelsHandler().getAllChannels().values();
//        log(INFO, "Listing all available TownyChat channels:");
//        for (Channel channel : channels) {
//            log(INFO, " - " + channel.getName());
//        }



    // Do not log private TownyChat messages.
    // Copied from DiscordSRV plugin.
    // https://github.com/DiscordSRV/DiscordSRV/blob/master/src/main/java/github/scarsz/discordsrv/hooks/chat/TownyChatHook.java

    //@EventHandler(priority = EventPriority.MONITOR)
//    public synchronized void onTownyChat(AsyncChatHookEvent event) {
//        // Only log messages from the global channel
//        //if (event.getChannel().getName().equalsIgnoreCase("general")) {
//
//        log(INFO, "event.getChannel().getName() " + event.getChannel().getName());
//        log(INFO, "event.getChannel() " + event.getChannel());
//        log(INFO, "event.getChannel() " + event.getMessage());
//
//
//            addMessage(new ChatMessage(
//                    event.getPlayer().getName(),
//                    event.getMessage(),
//                    Instant.now().getEpochSecond(),
//                    "msg"
//            ));
//        //}
//    }

